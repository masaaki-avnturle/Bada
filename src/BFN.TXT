megaプログラミング言語のBNF(バッキャス・ノイラー正規形式)を以下のように記述します。

<program> ::= <import>* <function>*

<import> ::= "import" <identifier>

<function> ::= "function" <identifier> "(" <parameter>* ")" <block>

<parameter> ::= <identifier> | <type> <identifier> 

<block> ::= "{" <statement>* "}"

<statement> ::= <assignment>
               | <if>
               | <while>
               | <return>
               | <expression>;

<assignment> ::= <identifier> "=" <expression>

<if> ::= "if" "(" <expression> ")" <block> 
       | "if" "(" <expression> ")" <block> "else" <block>

<while> ::= "while" "(" <expression> ")" <block>

<return> ::= "return" <expression>

<expression> ::= <logical_or_expression>

<logical_or_expression> ::= <logical_and_expression> ("||" <logical_and_expression>)*

<logical_and_expression> ::= <equality_expression> ("&&" <equality_expression>)*  

<equality_expression> ::= <relational_expression> (("=="|"!=") <relational_expression>)*

<relational_expression> ::= <additive_expression> (("<"|">"|"<="|">=") <additive_expression>)*

<additive_expression> ::= <multiplicative_expression> (("+"|"-") <multiplicative_expression>)*

<multiplicative_expression> ::= <primary_expression> (("*"|"/") <primary_expression>)*

<primary_expression> ::= <identifier> | <literal> | "(" <expression> ")"

<type> ::= "int" | "string" | "bool"

<identifier> ::= [a-zA-Z_][a-zA-Z0-9_]*

<literal> ::= <numeric_literal> | <string_literal> | "true" | "false"

<numeric_literal> ::= [0-9]+

<string_literal> ::= """[a-zA-Z0-9\\n]*"""

これでOmega言語の基本的な構文を定義できると思います。実際の構文規則ではもっと正式な表現となると思いますが、おおまかな概要が分かるように記述しました。

